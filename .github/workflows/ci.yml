name: CI

on:
  push:
    branches:
      - deploy
  pull_request:
    branches:
      - deploy

jobs:
  build-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and test backend with Maven
        run: mvn clean verify --file ./KPCBack/kingdomPC/pom.xml

  build-frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: ./KPCFront/kingdomPC

      - name: Run ESLint
        run: npx eslint . --ext .js,.jsx,.ts,.tsx
        working-directory: ./KPCFront/kingdomPC

      - name: Run frontend tests
        run: npm test -- --watchAll=false
        working-directory: ./KPCFront/kingdomPC

      - name: Build frontend production bundle
        run: npm run build
        working-directory: ./KPCFront/kingdomPC

  # quality-gate:
  #   name: Quality Gate
  #   runs-on: ubuntu-latest
  #   needs: [build-backend, build-frontend]

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: SonarQube Scan
  #       uses: SonarSource/sonarqube-scan-action@v1.1.0
  #       env:
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  #         SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  #       with:
  #         projectBaseDir: .
