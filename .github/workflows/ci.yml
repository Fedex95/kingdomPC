name: CI

on:
  push:
    branches:
      - master    
      - front2.0 
  pull_request:
    branches:
      - master
      - front2.0

jobs:
  build-backend:
    name: Build & Test Backend
    runs-on: ubuntu-latest
    if: contains(github.ref, 'master')  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and test backend with Maven
        run: mvn clean verify --file ./KPCBack/kingdomPC/pom.xml

  build-frontend:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    if: contains(github.ref, 'front2.0') 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm install
        working-directory: ./KPCFront/kingdomPC

      - name: Run ESLint
        run: npx eslint . --ext .js,.jsx,.ts,.tsx
        working-directory: ./KPCFront/kingdomPC

      - name: Run frontend tests
        run: npm test -- --watchAll=false
        working-directory: ./KPCFront/kingdomPC

      - name: Build frontend production bundle
        run: npm run build
        working-directory: ./KPCFront/kingdomPC

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    if: contains(github.ref, 'deploy')  
    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: kgpc
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Maven
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build backend for tests
        run: mvn clean package -DskipTests --file ./KPCBack/kingdomPC/pom.xml

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: KPCFront/kingdomPC/package-lock.json

      - name: Install frontend dependencies
        run: npm ci
        working-directory: ./KPCFront/kingdomPC

      - name: Build frontend
        run: npm run build
        working-directory: ./KPCFront/kingdomPC

      - name: Run E2E tests
        run: |
          # Levantar servicios con docker-compose.test.yml
          docker-compose -f docker-compose.test.yml up -d
          # Esperar a que servicios estén listos
          sleep 30
          # Ejecutar tests E2E 
          # npm run test:e2e 
          # O tests de integración del backend
          docker-compose -f docker-compose.test.yml down